#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform float time;
uniform vec2 resolution;

// نویز ساده و سریع
float hash(vec2 p) {
    return fract(sin(dot(p ,vec2(127.1,311.7))) * 43758.5453123);
}

float noise(vec2 p){
    vec2 i = floor(p);
    vec2 f = fract(p);

    float a = hash(i);
    float b = hash(i + vec2(1.0, 0.0));
    float c = hash(i + vec2(0.0, 1.0));
    float d = hash(i + vec2(1.0, 1.0));

    vec2 u = f*f*(3.0-2.0*f);

    return mix(a, b, u.x) + (c - a)* u.y*(1.0 - u.x) + (d - b)* u.x* u.y;
}

void main() {
    vec2 uv = gl_FragCoord.xy / resolution.xy;

    // مقیاس نویز
    float scale = 10.0;

    // نویز حرکت دار
    float n = noise(uv * scale + vec2(time*0.5, time*0.3));

    // خطوط عمودی شکسته با نویز جنیریتیو
    float lines = smoothstep(0.48, 0.5, fract(uv.x * scale + n * 3.0)) -
                  smoothstep(0.52, 0.52, fract(uv.x * scale + n * 5.0));

    // خطوط افقی شکسته با نویز
    float linesH = smoothstep(0.48, 0.5, fract(uv.y * scale + n * 5.0)) -
                   smoothstep(0.5, 0.52, fract(uv.y * scale + n * 5.0));

    // ترکیب خطوط برای الگوی شکستگی
    float pattern = max(lines, linesH);

    // افزایش کنتراست با یک تابع نمایی
    float color = pow(pattern, 3.0);

    gl_FragColor = vec4(vec3(color), 1.0);
}
